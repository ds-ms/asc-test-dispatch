on: [push]

env:
  REGISTRY_NAME: dsmsacr
  CLUSTER_NAME: ds-ms-k8s
  CLUSTER_RESOURCE_GROUP: ds-ms
  NAMESPACE: default
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}

    - uses: azure/container-scan@v0
      name: Container Scan 
      continue-on-error: true
      with:
        image-name: ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
        run-quality-checks: 'false'

    - name: Dispatch assessment trigger
      if: github.ref == 'refs/heads/master'
      run: |
       response=$(curl -X POST -H "Authorization: token ${{ secrets.GIT_PAT_DSMS }}" https://api.github.com/repos/${{ github.repository }}/dispatches --data '{"event_type": "TriggerContainerScanAssessment", "client_payload": {"commit": "${{ github.event.push.head_commit }}", "repository":  "${{ github.repository }}" }}')
       if [ "$response" == "" ]; then 
        echo "Triggering assessment creation succeeded"; 
       else 
        echo "Triggering integration tests failed with: '$response'";
       fi 

  deploy: 
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@master
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    - name: "Create namespace"
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - uses: azure/k8s-create-secret@v1
      name: "Create secret"
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    - uses: azure/k8s-deploy@v1
      name: "Deploy to cluster"
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
